# Generated by Django 5.0.8 on 2025-09-18 03:44

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("identity_app", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Beneficiary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("beneficiary_number", models.CharField(max_length=20, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REGISTERED", "Enregistré"),
                            ("UNDER_REVIEW", "En cours d'évaluation"),
                            ("APPROVED", "Approuvé"),
                            ("REJECTED", "Rejeté"),
                            ("ACTIVE", "Actif"),
                            ("SUSPENDED", "Suspendu"),
                            ("GRADUATED", "Diplômé/Sorti"),
                        ],
                        default="REGISTERED",
                        max_length=20,
                    ),
                ),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
                ("approval_date", models.DateTimeField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "eligibility_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vulnerability_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "priority_ranking",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "monthly_payment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_payments_received",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("last_payment_date", models.DateField(blank=True, null=True)),
                ("household_visits", models.PositiveIntegerField(default=0)),
                ("last_visit_date", models.DateField(blank=True, null=True)),
                (
                    "compliance_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100.00"), max_digits=5
                    ),
                ),
                ("submitted_documents", models.TextField(blank=True)),
                ("missing_documents", models.TextField(blank=True)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("VERIFIED", "Vérifié"),
                            ("REJECTED", "Rejeté"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("additional_data", models.JSONField(default=dict)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_beneficiaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "case_worker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="assigned_beneficiaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="registered_beneficiaries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity_app.personidentity",
                    ),
                ),
            ],
            options={
                "db_table": "programs_beneficiaries",
            },
        ),
        migrations.CreateModel(
            name="SocialProgram",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "program_type",
                    models.CharField(
                        choices=[
                            ("CASH_TRANSFER", "Transfert monétaire"),
                            ("FOOD_ASSISTANCE", "Aide alimentaire"),
                            ("HEALTH_SUPPORT", "Soutien santé"),
                            ("EDUCATION_GRANT", "Bourse éducation"),
                            ("HOUSING_SUBSIDY", "Subvention logement"),
                            ("EMPLOYMENT_PROGRAM", "Programme emploi"),
                            ("DISABILITY_SUPPORT", "Aide handicap"),
                            ("ELDERLY_CARE", "Soins personnes âgées"),
                        ],
                        max_length=30,
                    ),
                ),
                ("budget_total", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "budget_allocated",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "amount_per_beneficiary",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("ONE_TIME", "Paiement unique"),
                            ("MONTHLY", "Mensuel"),
                            ("QUARTERLY", "Trimestriel"),
                            ("YEARLY", "Annuel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("registration_start", models.DateField()),
                ("registration_end", models.DateField()),
                ("target_provinces", models.TextField(blank=True)),
                ("target_cities", models.TextField(blank=True)),
                ("is_nationwide", models.BooleanField(default=False)),
                ("min_age", models.PositiveIntegerField(blank=True, null=True)),
                ("max_age", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "target_gender",
                    models.CharField(
                        choices=[("M", "Masculin"), ("F", "Féminin"), ("A", "Tous")],
                        default="A",
                        max_length=1,
                    ),
                ),
                (
                    "max_income_threshold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("required_documents", models.TextField(blank=True)),
                ("eligibility_rules", models.JSONField(default=dict)),
                ("additional_criteria", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Brouillon"),
                            ("ACTIVE", "Actif"),
                            ("SUSPENDED", "Suspendu"),
                            ("CLOSED", "Fermé"),
                            ("UNDER_REVIEW", "En révision"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "max_beneficiaries",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("current_beneficiaries", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("responsible_ministry", models.CharField(max_length=200)),
                ("contact_person", models.CharField(max_length=200)),
                ("contact_phone", models.CharField(max_length=15)),
                ("contact_email", models.EmailField(max_length=254)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_programs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="managed_programs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "programs_social_programs",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("payment_reference", models.CharField(max_length=30, unique=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="XAF", max_length=3)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("BANK_TRANSFER", "Virement bancaire"),
                            ("MOBILE_MONEY", "Mobile money"),
                            ("DIGITAL_VOUCHER", "Bon numérique"),
                            ("CASH", "Espèces"),
                            ("CHECK", "Chèque"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("PROCESSING", "En traitement"),
                            ("COMPLETED", "Effectué"),
                            ("FAILED", "Échoué"),
                            ("CANCELLED", "Annulé"),
                            ("REFUNDED", "Remboursé"),
                        ],
                        default="PENDING",
                        max_length=15,
                    ),
                ),
                ("payment_period_start", models.DateField()),
                ("payment_period_end", models.DateField()),
                ("initiated_date", models.DateTimeField(auto_now_add=True)),
                ("processed_date", models.DateTimeField(blank=True, null=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                (
                    "external_transaction_id",
                    models.CharField(blank=True, max_length=100),
                ),
                ("payment_provider", models.CharField(blank=True, max_length=100)),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                ("recipient_name", models.CharField(max_length=200)),
                ("recipient_phone", models.CharField(blank=True, max_length=15)),
                ("recipient_account", models.CharField(blank=True, max_length=50)),
                ("failure_reason", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "beneficiary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="programs_app.beneficiary",
                    ),
                ),
                (
                    "initiated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="initiated_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="programs_app.socialprogram",
                    ),
                ),
            ],
            options={
                "db_table": "programs_payments",
            },
        ),
        migrations.CreateModel(
            name="DigitalVoucher",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("voucher_code", models.CharField(max_length=20, unique=True)),
                ("qr_code", models.TextField()),
                ("face_value", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "remaining_value",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("currency", models.CharField(default="XAF", max_length=3)),
                ("issue_date", models.DateTimeField(auto_now_add=True)),
                ("expiry_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Actif"),
                            ("USED", "Utilisé"),
                            ("EXPIRED", "Expiré"),
                            ("CANCELLED", "Annulé"),
                            ("SUSPENDED", "Suspendu"),
                        ],
                        default="ACTIVE",
                        max_length=15,
                    ),
                ),
                ("allowed_categories", models.TextField(blank=True)),
                ("allowed_merchants", models.TextField(blank=True)),
                ("geographic_restrictions", models.TextField(blank=True)),
                ("first_use_date", models.DateTimeField(blank=True, null=True)),
                ("last_use_date", models.DateTimeField(blank=True, null=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                (
                    "beneficiary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vouchers",
                        to="programs_app.beneficiary",
                    ),
                ),
                (
                    "issued_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="issued_vouchers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="programs_app.socialprogram",
                    ),
                ),
            ],
            options={
                "db_table": "programs_digital_vouchers",
            },
        ),
        migrations.AddField(
            model_name="beneficiary",
            name="program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="programs_app.socialprogram",
            ),
        ),
        migrations.AddIndex(
            model_name="socialprogram",
            index=models.Index(
                fields=["code", "status"], name="programs_so_code_20d792_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialprogram",
            index=models.Index(
                fields=["program_type", "status"], name="programs_so_program_1a0699_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialprogram",
            index=models.Index(
                fields=["start_date", "end_date"], name="programs_so_start_d_106912_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["payment_reference"], name="programs_pa_payment_351cc6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["beneficiary", "status"], name="programs_pa_benefic_0ad531_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["status", "initiated_date"],
                name="programs_pa_status_500eca_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["payment_period_start", "payment_period_end"],
                name="programs_pa_payment_205206_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="digitalvoucher",
            index=models.Index(
                fields=["voucher_code"], name="programs_di_voucher_b4627e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="digitalvoucher",
            index=models.Index(
                fields=["beneficiary", "status"], name="programs_di_benefic_4a409f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="digitalvoucher",
            index=models.Index(
                fields=["expiry_date", "status"], name="programs_di_expiry__1f9fa6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="beneficiary",
            index=models.Index(
                fields=["beneficiary_number"], name="programs_be_benefic_4f33ed_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="beneficiary",
            index=models.Index(
                fields=["program", "status"], name="programs_be_program_749d86_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="beneficiary",
            index=models.Index(
                fields=["person", "program"], name="programs_be_person__8f3614_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="beneficiary",
            index=models.Index(
                fields=["approval_date", "status"],
                name="programs_be_approva_0f302d_idx",
            ),
        ),
    ]
